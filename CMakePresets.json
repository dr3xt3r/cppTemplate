{
    "version": 8,
    "configurePresets": [
        {
            "name": "default",
            "hidden": true,
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build",
            "cacheVariables": {
                "CMAKE_INSTALL_PREFIX": "${sourceDir}/install",
                "CMAKE_C_COMPILER": "/usr/bin/gcc",
                "CMAKE_CXX_COMPILER": "/usr/bin/g++",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "YES",
                "CMAKE_RUNTIME_OUTPUT_DIRECTORY": "${sourceDir}/bin",
                "CMAKE_LIBRARY_OUTPUT_DIRECTORY": "${sourceDir}/bin/lib",
                "CMAKE_ARCHIVE_OUTPUT_DIRECTORY": "${sourceDir}/bin/archives",
                "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wpedantic",
                "CMAKE_C_FLAGS": "-Wall -Wextra -Wpedantic",
                "SANITIZERS": ""    // explicitly clear the sanitizers variable
            },
            "environment": {
                "ASAN_OPTIONS": "" // explicitly clear the ASAN_OPTIONS variable
            }
        },
        {
            "name": "debug_config",
            "displayName": "Debug configuration",
            "description": "Using compiler: CXX = /usr/bin/g++  C = /usr/bin/gcc",
            "inherits": ["default"],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug"
            }
        },
        {
            "name": "debug_asan_ubsan",
            "displayName": "Debug configuration - ASAN(LSAN disabled), UBSAN",
            "description": "Debug with Address Sanitizer and Undedefined Behavior Sanitizer",
            "inherits": ["debug_config"],
            "cacheVariables": {
                "SANITIZERS": "address;undefined"
            },
            "environment": {
                "ASAN_OPTIONS": "detect_leaks=0"    // disable LSAN
            }
        },
        {
            "name": "debug_asan_lsan_ubsan",
            "displayName": "Debug configuration - ASAN(LSAN enabled), UBSAN",
            "description": "Debug with Address Sanitizer, Undedefined Behavior Sanitizer and Leak Sanitizer(integrated in ASAN)",
            "inherits": ["debug_config"],
            "cacheVariables": {
                "SANITIZERS": "address;undefined"
            },
            "environment": {
                "ASAN_OPTIONS": "detect_leaks=1"    // enable LSAN
            }
        },
        {
            "name": "debug_tsan",
            "displayName": "Debug configuration - TSAN",
            "description": "Debug with Thread Sanitizer",
            "inherits": ["debug_config"],
            "cacheVariables": {
                "SANITIZERS": "thread"
            }
        },
        {
            "name": "release_config",
            "displayName": "Release configuration",
            "description": "Using compiler: CXX = /usr/bin/g++  C = /usr/bin/gcc",
            "inherits": ["default"],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "coverage_config",
            "displayName": "Coverage configuration",
            "description": "Using compiler: CXX = /usr/bin/g++  C = /usr/bin/gcc",
            "inherits": ["debug_config"],
            "cacheVariables": {
                "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wpedantic --coverage",
                "CMAKE_C_FLAGS": "-Wall -Wextra -Wpedantic --coverage"
            }
        }

    ],
    "buildPresets": [
        {
            "name": "build_debug",
            "displayName": "Build Debug",
            "configurePreset": "debug_config",
            "description": "Builds the project using the Debug configuration"
        },
        {
            "name": "rebuild_debug",
            "displayName": "Rebuild Debug (Clean Build)",
            "description": "Cleans the project and builds using the Debug configuration",
            "inherits": ["build_debug"],
            "cleanFirst": true
        },
        {
            "name": "build_asan_ubsan",
            "displayName": "Build Debug - ASAN(LSAN disabled), UBSAN",
            "description": "Builds the project using the Debug configuration with ASAN and UBSAN",
            "configurePreset": "debug_asan_ubsan"
        },
        {
            "name": "build_asan_lsan_ubsan",
            "displayName": "Build Debug - ASAN(LSAN enabled), UBSAN",
            "description": "Builds the project using the Debug configuration with ASAN,LSAN and UBSAN",
            "configurePreset": "debug_asan_lsan_ubsan"
        },
        {
            "name": "build_tsan",
            "displayName": "Build Debug - TSAN",
            "description": "Builds the project using the Debug configuration TSAN",
            "configurePreset": "debug_tsan"
        },        
        {
            "name": "build_release",
            "displayName": "Build Release",
            "configurePreset": "release_config",
            "description": "Builds the project using the Release configuration"
        },
        {
            "name": "rebuild_release",
            "displayName": "Rebuild Release (Clean Build)",
            "description": "Cleans the project and builds using the Release configuration",
            "inherits": "build_release",
            "cleanFirst": true
        },
        {
            "name": "build_coverage",
            "displayName": "Build Coverage",
            "configurePreset": "coverage_config",
            "description": "Builds the project using the Coverage configuration"
        }
    ],
    "testPresets": [
        {
            "name": "test_default",
            "execution": {
                "stopOnFailure": false
            },
            "hidden": true
        },
        {
            "name": "test_debug",
            "displayName": "Test Debug",
            "configurePreset": "debug_config",
            "description": "Runs tests using the Debug configuration",
            "inherits": "test_default",
            "inheritConfigureEnvironment": true
        },
        {
            "name": "test_asan_ubsan",
            "displayName": "Test Debug - ASAN(LSAN disabled), UBSAN",
            "configurePreset": "debug_asan_ubsan",
            "description": "Runs tests using the Debug configuration with ASAN and UBSAN",
            "inherits": "test_default",
            "inheritConfigureEnvironment": true
        },
        {
            "name": "test_asan_lsan_ubsan",
            "displayName": "Test Debug - ASAN(LSAN enabled), UBSAN",
            "configurePreset": "debug_asan_lsan_ubsan",
            "description": "Runs tests using the Debug configuration with ASAN, LSAN, and UBSAN",
            "inherits": "test_default",
            "inheritConfigureEnvironment": true
        },
        {
            "name": "test_tsan",
            "displayName": "Test Debug - TSAN",
            "configurePreset": "debug_tsan",
            "description": "Runs tests using the Debug configuration with TSAN",
            "inherits": "test_default",
            "inheritConfigureEnvironment": true
        },
        {
            "name": "test_release",
            "displayName": "Test Release",
            "configurePreset": "release_config",
            "description": "Runs tests using the Release configuration",
            "inherits": "test_default",
            "inheritConfigureEnvironment": true
        },
        {
            "name": "test_coverage",
            "displayName": "Test Coverage",
            "configurePreset": "coverage_config",
            "description": "Runs tests using the Coverage configuration",
            "inherits": "test_default",
            "inheritConfigureEnvironment": true
        }
    ]
}